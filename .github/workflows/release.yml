name: Release Management

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip release]')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Check for version changes
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./packages/next-dynamic-env/package.json').version")
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if tag already exists
          if git rev-parse "v$CURRENT_VERSION" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version v$CURRENT_VERSION already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "New version v$CURRENT_VERSION detected"
          fi
      
      - name: Generate changelog
        id: changelog
        if: steps.version.outputs.exists == 'false'
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Create changelog
          cat > CHANGELOG_TEMP.md << EOF
          ## What's Changed
          
          ### Commits
          $COMMITS
          
          ### Contributors
          $(git log ${LAST_TAG}..HEAD --pretty=format:"- @%an" --no-merges | sort -u)
          
          **Full Changelog**: ${LAST_TAG}...v${{ steps.version.outputs.current }}
          EOF
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG_TEMP.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        if: steps.version.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.current }}
          release_name: v${{ steps.version.outputs.current }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.current, 'beta') || contains(steps.version.outputs.current, 'alpha') }}
      
      - name: Update CHANGELOG.md
        if: steps.version.outputs.exists == 'false'
        run: |
          # Create or update CHANGELOG.md
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "All notable changes to this project will be documented in this file." >> CHANGELOG.md
            echo "" >> CHANGELOG.md
          fi
          
          # Add new version to changelog
          cat > CHANGELOG_NEW.md << EOF
          # Changelog
          
          All notable changes to this project will be documented in this file.
          
          ## [v${{ steps.version.outputs.current }}] - $(date +%Y-%m-%d)
          
          ${{ steps.changelog.outputs.changelog }}
          
          EOF
          
          # Append existing changelog (skip header)
          tail -n +5 CHANGELOG.md >> CHANGELOG_NEW.md 2>/dev/null || true
          
          mv CHANGELOG_NEW.md CHANGELOG.md
          
          # Commit changelog
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git diff --staged --quiet || git commit -m "docs: update CHANGELOG.md for v${{ steps.version.outputs.current }} [skip release]"
          git push