name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Check formatting
        run: pnpm format
      
      - name: Run linting (package only)
        run: |
          cd packages/next-dynamic-env
          pnpm lint
      
      - name: Run type checking (package only)
        run: |
          cd packages/next-dynamic-env
          pnpm typecheck
      
      - name: Run tests
        run: |
          cd packages/next-dynamic-env
          pnpm test:coverage
      
      - name: Build packages
        run: pnpm build:packages
      
      - name: Check bundle size
        run: |
          cd packages/next-dynamic-env
          npm pack --dry-run
          echo "::notice::Bundle size check complete"
      
      - name: Run syncpack
        run: |
          pnpm syncpack:lint || echo "::warning::Dependencies are not in sync"
      
      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            let comment = '## PR Validation Results\n\n';
            
            // Check if tests passed
            if (${{ job.status }} === 'success') {
              comment += '✅ All checks passed!\n\n';
            } else {
              comment += '❌ Some checks failed. Please review the workflow logs.\n\n';
            }
            
            comment += '### Checks\n';
            comment += '- Formatting: ${{ steps.format.outcome || 'skipped' }}\n';
            comment += '- Linting: ${{ steps.lint.outcome || 'skipped' }}\n';
            comment += '- Type checking: ${{ steps.typecheck.outcome || 'skipped' }}\n';
            comment += '- Tests: ${{ steps.test.outcome || 'skipped' }}\n';
            comment += '- Build: ${{ steps.build.outcome || 'skipped' }}\n';
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('PR Validation Results')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v5
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build package
        run: pnpm build:packages
      
      - name: Analyze bundle
        run: |
          cd packages/next-dynamic-env
          echo "## Bundle Analysis" > bundle-report.md
          echo "" >> bundle-report.md
          echo "### Package Size" >> bundle-report.md
          npm pack --dry-run 2>&1 | tail -20 >> bundle-report.md
          echo "" >> bundle-report.md
          echo "### Build Output" >> bundle-report.md
          ls -lah dist/ >> bundle-report.md
      
      - name: Upload bundle report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-report
          path: packages/next-dynamic-env/bundle-report.md